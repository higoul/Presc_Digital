{
  "permissions": {
    "allow": [
      "Bash(git checkout:*)",
      "Bash(npm run build:*)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nrefactor: componentizar App.tsx e organizar estrutura\n\nBREAKING CHANGES:\n- Reorganizada estrutura de pastas com src/\n- App.tsx refatorado de 200+ linhas para 85 linhas\n- Componentes extraÃ­dos:\n  * Sidebar - menu lateral com busca e navegaÃ§Ã£o\n  * Header - cabeÃ§alho responsivo\n  * ConditionDetail - detalhes da condiÃ§Ã£o\n  * TreatmentBlock - bloco de tratamento\n  * InfoBlock - bloco de informaÃ§Ã£o reutilizÃ¡vel\n  * EmptyState - estado vazio\n  * Glossary - movido para src/components/glossary/\n\nCustom Hooks:\n- useSearch - gerencia busca e filtragem\n- useSidebar - gerencia estado do menu lateral\n\nMelhorias:\n- SeparaÃ§Ã£o de responsabilidades (SRP)\n- Componentes reutilizÃ¡veis\n- Hooks customizados para lÃ³gica\n- Acessibilidade: aria-labels, sr-only, aria-current\n- Props tipadas com TypeScript\n- CÃ³digo mais testÃ¡vel e manutenÃ­vel\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git merge:*)",
      "Bash(git tag:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nperf: adicionar otimizaÃ§Ãµes de performance\n\nMelhorias implementadas:\n- React.memo em componentes que renderizam listas\n  * ConditionListItem: evita re-render de 93+ itens\n  * Header, EmptyState: evita re-renders desnecessÃ¡rios\n  \n- useCallback para estabilizar handlers\n  * handleSelectCondition\n  * handleSelectGlossary\n  * Previne re-criaÃ§Ã£o de funÃ§Ãµes a cada render\n\n- useMemo para valores computados\n  * headerTitle e headerSubtitle\n  * Evita recÃ¡lculos desnecessÃ¡rios\n\n- Lazy loading com code splitting\n  * ConditionDetail: 2.25 kB chunk separado\n  * Glossary: 6.30 kB chunk separado\n  * Bundle principal reduzido\n  * Componentes carregam apenas quando necessÃ¡rio\n\nResultados:\n- Menos re-renders em componentes filhos\n- Bundle inicial menor\n- Melhor performance com 93+ condiÃ§Ãµes\n- Tempo de carregamento inicial reduzido\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: implementar melhorias completas de acessibilidade\n\nRecursos adicionados:\n\n1. Atalhos de Teclado:\n   - Ctrl+K: Focar no campo de busca\n   - Ctrl+B: Abrir/fechar menu lateral\n   - Ctrl+G: Abrir glossÃ¡rio\n   - Ctrl+?: Mostrar ajuda de atalhos\n   - Esc: Fechar menu ou modal\n   - Tab/Shift+Tab: NavegaÃ§Ã£o entre elementos\n\n2. Custom Hooks:\n   - useKeyboardShortcuts: gerencia atalhos de teclado\n   - useFocusManagement: gerencia foco e focus trap\n\n3. Componentes:\n   - KeyboardHelp: modal com todos os atalhos\n   - Suporte completo a teclado em todos componentes\n\n4. ARIA e SemÃ¢ntica:\n   - Skip links (pular para conteÃºdo/busca)\n   - Live regions para anÃºncios do screen reader\n   - aria-labels descritivos\n   - aria-current para navegaÃ§Ã£o\n   - aria-describedby para dicas contextuais\n   - role e aria-modal corretos\n\n5. Screen Reader Support:\n   - AnÃºncios de condiÃ§Ã£o selecionada\n   - Contador de resultados de busca\n   - Labels invisÃ­veis (.sr-only)\n   - Foco gerenciado corretamente\n\n6. NavegaÃ§Ã£o:\n   - Foco automÃ¡tico no campo de busca (Ctrl+K)\n   - Skip links sempre acessÃ­veis\n   - NavegaÃ§Ã£o completa por teclado\n   - Indicadores visuais de foco\n\nConformidade:\n- WCAG 2.1 NÃ­vel AA\n- NavegaÃ§Ã£o completa sem mouse\n- Screen reader friendly\n- Indicadores visuais claros\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
